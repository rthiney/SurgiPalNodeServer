---
swagger: "2.0"
info:
  description: "API generated with [PHP-CRUD-API](https://github.com/mevdschee/php-crud-api)"
  version: "1.0.0"
  title: "surgipal_master"
host: "surgipal.com"
basePath: "/api/api.php"
tags:
- name: "answer"
  description: ""
- name: "answer_suggested"
  description: ""
- name: "answers_box"
  description: ""
- name: "article"
  description: ""
- name: "attachment"
  description: ""
- name: "card"
  description: ""
- name: "category"
  description: ""
- name: "cluster"
  description: ""
- name: "cluster_card"
  description: ""
- name: "contact_message"
  description: ""
- name: "country"
  description: ""
- name: "doctor_data"
  description: ""
- name: "doctor_hospital"
  description: ""
- name: "doctor_message"
  description: ""
- name: "doctor_vendor"
  description: ""
- name: "exclusioner"
  description: ""
- name: "fos_user"
  description: ""
- name: "glove_size"
  description: ""
- name: "glove_type"
  description: ""
- name: "gown_size"
  description: ""
- name: "group"
  description: ""
- name: "handedness"
  description: ""
- name: "hospital_data"
  description: ""
- name: "messagesview"
  description: "VIEW"
- name: "practice"
  description: ""
- name: "practice_hospital"
  description: ""
- name: "question"
  description: ""
- name: "question_type"
  description: ""
- name: "resident"
  description: ""
- name: "specialty"
  description: ""
- name: "state"
  description: ""
- name: "surgeriesview"
  description: "VIEW"
- name: "surgery"
  description: ""
- name: "surgery_status"
  description: ""
- name: "system_variable"
  description: ""
- name: "systemlog"
  description: ""
- name: "user_user"
  description: ""
- name: "vendor_data"
  description: ""
- name: "vendordata_user"
  description: ""
- name: "years_in_practice"
  description: ""
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /SystemLog:
    get:
      tags:
      - "SystemLog"
      summary: "List"
      operationId: "systemLogGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of SystemLog"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "SystemLog"
    post:
      tags:
      - "SystemLog"
      summary: "Create"
      operationId: "systemLogPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "SystemLog"
  /SystemLog/{id}:
    get:
      tags:
      - "SystemLog"
      summary: "Read"
      operationId: "systemLogIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "SystemLog"
    put:
      tags:
      - "SystemLog"
      summary: "Update"
      operationId: "systemLogIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_1"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "SystemLog"
    delete:
      tags:
      - "SystemLog"
      summary: "Delete"
      operationId: "systemLogIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "SystemLog"
    patch:
      tags:
      - "SystemLog"
      summary: "Increment"
      operationId: "systemLogIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_2"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "SystemLog"
  /answer:
    get:
      tags:
      - "answer"
      summary: "List"
      operationId: "answerGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of answer"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Answer"
    post:
      tags:
      - "answer"
      summary: "Create"
      operationId: "answerPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_3"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer"
  /answer/{id}:
    get:
      tags:
      - "answer"
      summary: "Read"
      operationId: "answerIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "Answer"
    put:
      tags:
      - "answer"
      summary: "Update"
      operationId: "answerIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_4"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer"
    delete:
      tags:
      - "answer"
      summary: "Delete"
      operationId: "answerIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer"
    patch:
      tags:
      - "answer"
      summary: "Increment"
      operationId: "answerIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_5"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer"
  /answer_suggested:
    get:
      tags:
      - "answer_suggested"
      summary: "List"
      operationId: "answer_suggestedGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of answer_suggested"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Answer_suggested"
    post:
      tags:
      - "answer_suggested"
      summary: "Create"
      operationId: "answer_suggestedPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_6"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer_suggested"
  /answer_suggested/{id}:
    get:
      tags:
      - "answer_suggested"
      summary: "Read"
      operationId: "answer_suggestedIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_2"
      x-swagger-router-controller: "Answer_suggested"
    put:
      tags:
      - "answer_suggested"
      summary: "Update"
      operationId: "answer_suggestedIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_7"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer_suggested"
    delete:
      tags:
      - "answer_suggested"
      summary: "Delete"
      operationId: "answer_suggestedIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer_suggested"
    patch:
      tags:
      - "answer_suggested"
      summary: "Increment"
      operationId: "answer_suggestedIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_8"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answer_suggested"
  /answers_box:
    get:
      tags:
      - "answers_box"
      summary: "List"
      operationId: "answers_boxGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of answers_box"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_3"
      x-swagger-router-controller: "Answers_box"
    post:
      tags:
      - "answers_box"
      summary: "Create"
      operationId: "answers_boxPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_9"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answers_box"
  /answers_box/{id}:
    get:
      tags:
      - "answers_box"
      summary: "Read"
      operationId: "answers_boxIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_3"
      x-swagger-router-controller: "Answers_box"
    put:
      tags:
      - "answers_box"
      summary: "Update"
      operationId: "answers_boxIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_10"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answers_box"
    delete:
      tags:
      - "answers_box"
      summary: "Delete"
      operationId: "answers_boxIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answers_box"
    patch:
      tags:
      - "answers_box"
      summary: "Increment"
      operationId: "answers_boxIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_11"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Answers_box"
  /article:
    get:
      tags:
      - "article"
      summary: "List"
      operationId: "articleGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of article"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_4"
      x-swagger-router-controller: "Article"
    post:
      tags:
      - "article"
      summary: "Create"
      operationId: "articlePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_12"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Article"
  /article/{id}:
    get:
      tags:
      - "article"
      summary: "Read"
      operationId: "articleIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_4"
      x-swagger-router-controller: "Article"
    put:
      tags:
      - "article"
      summary: "Update"
      operationId: "articleIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_13"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Article"
    delete:
      tags:
      - "article"
      summary: "Delete"
      operationId: "articleIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Article"
    patch:
      tags:
      - "article"
      summary: "Increment"
      operationId: "articleIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_14"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Article"
  /attachment:
    get:
      tags:
      - "attachment"
      summary: "List"
      operationId: "attachmentGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of attachment"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_5"
      x-swagger-router-controller: "Attachment"
    post:
      tags:
      - "attachment"
      summary: "Create"
      operationId: "attachmentPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_15"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Attachment"
  /attachment/{id}:
    get:
      tags:
      - "attachment"
      summary: "Read"
      operationId: "attachmentIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_5"
      x-swagger-router-controller: "Attachment"
    put:
      tags:
      - "attachment"
      summary: "Update"
      operationId: "attachmentIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_16"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Attachment"
    delete:
      tags:
      - "attachment"
      summary: "Delete"
      operationId: "attachmentIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Attachment"
    patch:
      tags:
      - "attachment"
      summary: "Increment"
      operationId: "attachmentIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_17"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Attachment"
  /card:
    get:
      tags:
      - "card"
      summary: "List"
      operationId: "cardGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of card"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_6"
      x-swagger-router-controller: "Card"
    post:
      tags:
      - "card"
      summary: "Create"
      operationId: "cardPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_18"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Card"
  /card/{id}:
    get:
      tags:
      - "card"
      summary: "Read"
      operationId: "cardIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_6"
      x-swagger-router-controller: "Card"
    put:
      tags:
      - "card"
      summary: "Update"
      operationId: "cardIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_19"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Card"
    delete:
      tags:
      - "card"
      summary: "Delete"
      operationId: "cardIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Card"
    patch:
      tags:
      - "card"
      summary: "Increment"
      operationId: "cardIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_20"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Card"
  /category:
    get:
      tags:
      - "category"
      summary: "List"
      operationId: "categoryGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of category"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_7"
      x-swagger-router-controller: "Category"
    post:
      tags:
      - "category"
      summary: "Create"
      operationId: "categoryPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_21"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Category"
  /category/{id}:
    get:
      tags:
      - "category"
      summary: "Read"
      operationId: "categoryIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_7"
      x-swagger-router-controller: "Category"
    put:
      tags:
      - "category"
      summary: "Update"
      operationId: "categoryIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_22"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Category"
    delete:
      tags:
      - "category"
      summary: "Delete"
      operationId: "categoryIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Category"
    patch:
      tags:
      - "category"
      summary: "Increment"
      operationId: "categoryIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_23"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Category"
  /cluster:
    get:
      tags:
      - "cluster"
      summary: "List"
      operationId: "clusterGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of cluster"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_8"
      x-swagger-router-controller: "Cluster"
    post:
      tags:
      - "cluster"
      summary: "Create"
      operationId: "clusterPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_24"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster"
  /cluster/{id}:
    get:
      tags:
      - "cluster"
      summary: "Read"
      operationId: "clusterIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_8"
      x-swagger-router-controller: "Cluster"
    put:
      tags:
      - "cluster"
      summary: "Update"
      operationId: "clusterIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_25"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster"
    delete:
      tags:
      - "cluster"
      summary: "Delete"
      operationId: "clusterIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster"
    patch:
      tags:
      - "cluster"
      summary: "Increment"
      operationId: "clusterIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_26"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster"
  /cluster_card:
    get:
      tags:
      - "cluster_card"
      summary: "List"
      operationId: "cluster_cardGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of cluster_card"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_9"
      x-swagger-router-controller: "Cluster_card"
    post:
      tags:
      - "cluster_card"
      summary: "Create"
      operationId: "cluster_cardPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_27"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster_card"
  /cluster_card/{id}:
    get:
      tags:
      - "cluster_card"
      summary: "Read"
      operationId: "cluster_cardIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_9"
      x-swagger-router-controller: "Cluster_card"
    put:
      tags:
      - "cluster_card"
      summary: "Update"
      operationId: "cluster_cardIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_28"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster_card"
    delete:
      tags:
      - "cluster_card"
      summary: "Delete"
      operationId: "cluster_cardIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster_card"
    patch:
      tags:
      - "cluster_card"
      summary: "Increment"
      operationId: "cluster_cardIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_29"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Cluster_card"
  /contact_message:
    get:
      tags:
      - "contact_message"
      summary: "List"
      operationId: "contact_messageGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of contact_message"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_10"
      x-swagger-router-controller: "Contact_message"
    post:
      tags:
      - "contact_message"
      summary: "Create"
      operationId: "contact_messagePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_30"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Contact_message"
  /contact_message/{id}:
    get:
      tags:
      - "contact_message"
      summary: "Read"
      operationId: "contact_messageIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_10"
      x-swagger-router-controller: "Contact_message"
    put:
      tags:
      - "contact_message"
      summary: "Update"
      operationId: "contact_messageIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_31"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Contact_message"
    delete:
      tags:
      - "contact_message"
      summary: "Delete"
      operationId: "contact_messageIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Contact_message"
    patch:
      tags:
      - "contact_message"
      summary: "Increment"
      operationId: "contact_messageIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_32"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Contact_message"
  /country:
    get:
      tags:
      - "country"
      summary: "List"
      operationId: "countryGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of country"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_11"
      x-swagger-router-controller: "Country"
    post:
      tags:
      - "country"
      summary: "Create"
      operationId: "countryPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_33"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Country"
  /country/{id}:
    get:
      tags:
      - "country"
      summary: "Read"
      operationId: "countryIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_11"
      x-swagger-router-controller: "Country"
    put:
      tags:
      - "country"
      summary: "Update"
      operationId: "countryIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_34"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Country"
    delete:
      tags:
      - "country"
      summary: "Delete"
      operationId: "countryIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Country"
    patch:
      tags:
      - "country"
      summary: "Increment"
      operationId: "countryIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_35"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Country"
  /doctor_data:
    get:
      tags:
      - "doctor_data"
      summary: "List"
      operationId: "doctor_dataGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of doctor_data"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_12"
      x-swagger-router-controller: "Doctor_data"
    post:
      tags:
      - "doctor_data"
      summary: "Create"
      operationId: "doctor_dataPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_36"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_data"
  /doctor_data/{id}:
    get:
      tags:
      - "doctor_data"
      summary: "Read"
      operationId: "doctor_dataIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_12"
      x-swagger-router-controller: "Doctor_data"
    put:
      tags:
      - "doctor_data"
      summary: "Update"
      operationId: "doctor_dataIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_37"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_data"
    delete:
      tags:
      - "doctor_data"
      summary: "Delete"
      operationId: "doctor_dataIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_data"
    patch:
      tags:
      - "doctor_data"
      summary: "Increment"
      operationId: "doctor_dataIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_38"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_data"
  /doctor_hospital:
    get:
      tags:
      - "doctor_hospital"
      summary: "List"
      operationId: "doctor_hospitalGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of doctor_hospital"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_13"
      x-swagger-router-controller: "Doctor_hospital"
    post:
      tags:
      - "doctor_hospital"
      summary: "Create"
      operationId: "doctor_hospitalPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_39"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_hospital"
  /doctor_hospital/{id}:
    get:
      tags:
      - "doctor_hospital"
      summary: "Read"
      operationId: "doctor_hospitalIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_13"
      x-swagger-router-controller: "Doctor_hospital"
    put:
      tags:
      - "doctor_hospital"
      summary: "Update"
      operationId: "doctor_hospitalIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_40"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_hospital"
    delete:
      tags:
      - "doctor_hospital"
      summary: "Delete"
      operationId: "doctor_hospitalIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_hospital"
    patch:
      tags:
      - "doctor_hospital"
      summary: "Increment"
      operationId: "doctor_hospitalIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_41"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_hospital"
  /doctor_message:
    get:
      tags:
      - "doctor_message"
      summary: "List"
      operationId: "doctor_messageGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of doctor_message"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_14"
      x-swagger-router-controller: "Doctor_message"
    post:
      tags:
      - "doctor_message"
      summary: "Create"
      operationId: "doctor_messagePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_42"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_message"
  /doctor_message/{id}:
    get:
      tags:
      - "doctor_message"
      summary: "Read"
      operationId: "doctor_messageIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_14"
      x-swagger-router-controller: "Doctor_message"
    put:
      tags:
      - "doctor_message"
      summary: "Update"
      operationId: "doctor_messageIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_43"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_message"
    delete:
      tags:
      - "doctor_message"
      summary: "Delete"
      operationId: "doctor_messageIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_message"
    patch:
      tags:
      - "doctor_message"
      summary: "Increment"
      operationId: "doctor_messageIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_44"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_message"
  /doctor_vendor:
    get:
      tags:
      - "doctor_vendor"
      summary: "List"
      operationId: "doctor_vendorGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of doctor_vendor"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_15"
      x-swagger-router-controller: "Doctor_vendor"
    post:
      tags:
      - "doctor_vendor"
      summary: "Create"
      operationId: "doctor_vendorPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_45"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_vendor"
  /doctor_vendor/{id}:
    get:
      tags:
      - "doctor_vendor"
      summary: "Read"
      operationId: "doctor_vendorIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_15"
      x-swagger-router-controller: "Doctor_vendor"
    put:
      tags:
      - "doctor_vendor"
      summary: "Update"
      operationId: "doctor_vendorIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_46"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_vendor"
    delete:
      tags:
      - "doctor_vendor"
      summary: "Delete"
      operationId: "doctor_vendorIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_vendor"
    patch:
      tags:
      - "doctor_vendor"
      summary: "Increment"
      operationId: "doctor_vendorIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_47"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Doctor_vendor"
  /exclusioner:
    get:
      tags:
      - "exclusioner"
      summary: "List"
      operationId: "exclusionerGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of exclusioner"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_16"
      x-swagger-router-controller: "Exclusioner"
    post:
      tags:
      - "exclusioner"
      summary: "Create"
      operationId: "exclusionerPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_48"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Exclusioner"
  /exclusioner/{id}:
    get:
      tags:
      - "exclusioner"
      summary: "Read"
      operationId: "exclusionerIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_16"
      x-swagger-router-controller: "Exclusioner"
    put:
      tags:
      - "exclusioner"
      summary: "Update"
      operationId: "exclusionerIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_49"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Exclusioner"
    delete:
      tags:
      - "exclusioner"
      summary: "Delete"
      operationId: "exclusionerIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Exclusioner"
    patch:
      tags:
      - "exclusioner"
      summary: "Increment"
      operationId: "exclusionerIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_50"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Exclusioner"
  /fos_user:
    get:
      tags:
      - "fos_user"
      summary: "List"
      operationId: "fos_userGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of fos_user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_17"
      x-swagger-router-controller: "Fos_user"
    post:
      tags:
      - "fos_user"
      summary: "Create"
      operationId: "fos_userPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_51"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Fos_user"
  /fos_user/{id}:
    get:
      tags:
      - "fos_user"
      summary: "Read"
      operationId: "fos_userIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_17"
      x-swagger-router-controller: "Fos_user"
    put:
      tags:
      - "fos_user"
      summary: "Update"
      operationId: "fos_userIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_52"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Fos_user"
    delete:
      tags:
      - "fos_user"
      summary: "Delete"
      operationId: "fos_userIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Fos_user"
    patch:
      tags:
      - "fos_user"
      summary: "Increment"
      operationId: "fos_userIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_53"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Fos_user"
  /glove_size:
    get:
      tags:
      - "glove_size"
      summary: "List"
      operationId: "glove_sizeGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of glove_size"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_18"
      x-swagger-router-controller: "Glove_size"
    post:
      tags:
      - "glove_size"
      summary: "Create"
      operationId: "glove_sizePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_54"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_size"
  /glove_size/{id}:
    get:
      tags:
      - "glove_size"
      summary: "Read"
      operationId: "glove_sizeIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_18"
      x-swagger-router-controller: "Glove_size"
    put:
      tags:
      - "glove_size"
      summary: "Update"
      operationId: "glove_sizeIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_55"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_size"
    delete:
      tags:
      - "glove_size"
      summary: "Delete"
      operationId: "glove_sizeIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_size"
    patch:
      tags:
      - "glove_size"
      summary: "Increment"
      operationId: "glove_sizeIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_56"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_size"
  /glove_type:
    get:
      tags:
      - "glove_type"
      summary: "List"
      operationId: "glove_typeGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of glove_type"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_19"
      x-swagger-router-controller: "Glove_type"
    post:
      tags:
      - "glove_type"
      summary: "Create"
      operationId: "glove_typePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_57"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_type"
  /glove_type/{id}:
    get:
      tags:
      - "glove_type"
      summary: "Read"
      operationId: "glove_typeIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_19"
      x-swagger-router-controller: "Glove_type"
    put:
      tags:
      - "glove_type"
      summary: "Update"
      operationId: "glove_typeIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_58"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_type"
    delete:
      tags:
      - "glove_type"
      summary: "Delete"
      operationId: "glove_typeIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_type"
    patch:
      tags:
      - "glove_type"
      summary: "Increment"
      operationId: "glove_typeIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_59"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Glove_type"
  /gown_size:
    get:
      tags:
      - "gown_size"
      summary: "List"
      operationId: "gown_sizeGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of gown_size"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_20"
      x-swagger-router-controller: "Gown_size"
    post:
      tags:
      - "gown_size"
      summary: "Create"
      operationId: "gown_sizePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_60"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Gown_size"
  /gown_size/{id}:
    get:
      tags:
      - "gown_size"
      summary: "Read"
      operationId: "gown_sizeIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_20"
      x-swagger-router-controller: "Gown_size"
    put:
      tags:
      - "gown_size"
      summary: "Update"
      operationId: "gown_sizeIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_61"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Gown_size"
    delete:
      tags:
      - "gown_size"
      summary: "Delete"
      operationId: "gown_sizeIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Gown_size"
    patch:
      tags:
      - "gown_size"
      summary: "Increment"
      operationId: "gown_sizeIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_62"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Gown_size"
  /group:
    get:
      tags:
      - "group"
      summary: "List"
      operationId: "groupGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of group"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_21"
      x-swagger-router-controller: "Group"
    post:
      tags:
      - "group"
      summary: "Create"
      operationId: "groupPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_63"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Group"
  /group/{id}:
    get:
      tags:
      - "group"
      summary: "Read"
      operationId: "groupIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_21"
      x-swagger-router-controller: "Group"
    put:
      tags:
      - "group"
      summary: "Update"
      operationId: "groupIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_64"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Group"
    delete:
      tags:
      - "group"
      summary: "Delete"
      operationId: "groupIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Group"
    patch:
      tags:
      - "group"
      summary: "Increment"
      operationId: "groupIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_65"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Group"
  /handedness:
    get:
      tags:
      - "handedness"
      summary: "List"
      operationId: "handednessGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of handedness"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_22"
      x-swagger-router-controller: "Handedness"
    post:
      tags:
      - "handedness"
      summary: "Create"
      operationId: "handednessPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_66"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Handedness"
  /handedness/{id}:
    get:
      tags:
      - "handedness"
      summary: "Read"
      operationId: "handednessIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_22"
      x-swagger-router-controller: "Handedness"
    put:
      tags:
      - "handedness"
      summary: "Update"
      operationId: "handednessIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_67"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Handedness"
    delete:
      tags:
      - "handedness"
      summary: "Delete"
      operationId: "handednessIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Handedness"
    patch:
      tags:
      - "handedness"
      summary: "Increment"
      operationId: "handednessIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_68"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Handedness"
  /hospital_data:
    get:
      tags:
      - "hospital_data"
      summary: "List"
      operationId: "hospital_dataGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of hospital_data"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_23"
      x-swagger-router-controller: "Hospital_data"
    post:
      tags:
      - "hospital_data"
      summary: "Create"
      operationId: "hospital_dataPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_69"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Hospital_data"
  /hospital_data/{id}:
    get:
      tags:
      - "hospital_data"
      summary: "Read"
      operationId: "hospital_dataIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_23"
      x-swagger-router-controller: "Hospital_data"
    put:
      tags:
      - "hospital_data"
      summary: "Update"
      operationId: "hospital_dataIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_70"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Hospital_data"
    delete:
      tags:
      - "hospital_data"
      summary: "Delete"
      operationId: "hospital_dataIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Hospital_data"
    patch:
      tags:
      - "hospital_data"
      summary: "Increment"
      operationId: "hospital_dataIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_71"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Hospital_data"
  /messagesview:
    get:
      tags:
      - "messagesview"
      summary: "List"
      operationId: "messagesviewGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of messagesview"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_24"
      x-swagger-router-controller: "Messagesview"
    post:
      tags:
      - "messagesview"
      summary: "Create"
      operationId: "messagesviewPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_72"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Messagesview"
  /messagesview/{id}:
    get:
      tags:
      - "messagesview"
      summary: "Read"
      operationId: "messagesviewIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_24"
      x-swagger-router-controller: "Messagesview"
    put:
      tags:
      - "messagesview"
      summary: "Update"
      operationId: "messagesviewIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_73"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Messagesview"
    delete:
      tags:
      - "messagesview"
      summary: "Delete"
      operationId: "messagesviewIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Messagesview"
    patch:
      tags:
      - "messagesview"
      summary: "Increment"
      operationId: "messagesviewIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_74"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Messagesview"
  /practice:
    get:
      tags:
      - "practice"
      summary: "List"
      operationId: "practiceGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of practice"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_25"
      x-swagger-router-controller: "Practice"
    post:
      tags:
      - "practice"
      summary: "Create"
      operationId: "practicePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_75"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice"
  /practice/{id}:
    get:
      tags:
      - "practice"
      summary: "Read"
      operationId: "practiceIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_25"
      x-swagger-router-controller: "Practice"
    put:
      tags:
      - "practice"
      summary: "Update"
      operationId: "practiceIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_76"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice"
    delete:
      tags:
      - "practice"
      summary: "Delete"
      operationId: "practiceIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice"
    patch:
      tags:
      - "practice"
      summary: "Increment"
      operationId: "practiceIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_77"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice"
  /practice_hospital:
    get:
      tags:
      - "practice_hospital"
      summary: "List"
      operationId: "practice_hospitalGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of practice_hospital"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_26"
      x-swagger-router-controller: "Practice_hospital"
    post:
      tags:
      - "practice_hospital"
      summary: "Create"
      operationId: "practice_hospitalPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_78"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice_hospital"
  /practice_hospital/{id}:
    get:
      tags:
      - "practice_hospital"
      summary: "Read"
      operationId: "practice_hospitalIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_26"
      x-swagger-router-controller: "Practice_hospital"
    put:
      tags:
      - "practice_hospital"
      summary: "Update"
      operationId: "practice_hospitalIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_79"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice_hospital"
    delete:
      tags:
      - "practice_hospital"
      summary: "Delete"
      operationId: "practice_hospitalIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice_hospital"
    patch:
      tags:
      - "practice_hospital"
      summary: "Increment"
      operationId: "practice_hospitalIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_80"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Practice_hospital"
  /question:
    get:
      tags:
      - "question"
      summary: "List"
      operationId: "questionGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of question"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_27"
      x-swagger-router-controller: "Question"
    post:
      tags:
      - "question"
      summary: "Create"
      operationId: "questionPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_81"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question"
  /question/{id}:
    get:
      tags:
      - "question"
      summary: "Read"
      operationId: "questionIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_27"
      x-swagger-router-controller: "Question"
    put:
      tags:
      - "question"
      summary: "Update"
      operationId: "questionIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_82"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question"
    delete:
      tags:
      - "question"
      summary: "Delete"
      operationId: "questionIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question"
    patch:
      tags:
      - "question"
      summary: "Increment"
      operationId: "questionIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_83"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question"
  /question_type:
    get:
      tags:
      - "question_type"
      summary: "List"
      operationId: "question_typeGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of question_type"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_28"
      x-swagger-router-controller: "Question_type"
    post:
      tags:
      - "question_type"
      summary: "Create"
      operationId: "question_typePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_84"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question_type"
  /question_type/{id}:
    get:
      tags:
      - "question_type"
      summary: "Read"
      operationId: "question_typeIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_28"
      x-swagger-router-controller: "Question_type"
    put:
      tags:
      - "question_type"
      summary: "Update"
      operationId: "question_typeIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_85"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question_type"
    delete:
      tags:
      - "question_type"
      summary: "Delete"
      operationId: "question_typeIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question_type"
    patch:
      tags:
      - "question_type"
      summary: "Increment"
      operationId: "question_typeIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_86"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Question_type"
  /resident:
    get:
      tags:
      - "resident"
      summary: "List"
      operationId: "residentGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of resident"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_29"
      x-swagger-router-controller: "Resident"
    post:
      tags:
      - "resident"
      summary: "Create"
      operationId: "residentPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_87"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Resident"
  /resident/{id}:
    get:
      tags:
      - "resident"
      summary: "Read"
      operationId: "residentIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_29"
      x-swagger-router-controller: "Resident"
    put:
      tags:
      - "resident"
      summary: "Update"
      operationId: "residentIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_88"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Resident"
    delete:
      tags:
      - "resident"
      summary: "Delete"
      operationId: "residentIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Resident"
    patch:
      tags:
      - "resident"
      summary: "Increment"
      operationId: "residentIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_89"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Resident"
  /specialty:
    get:
      tags:
      - "specialty"
      summary: "List"
      operationId: "specialtyGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of specialty"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_30"
      x-swagger-router-controller: "Specialty"
    post:
      tags:
      - "specialty"
      summary: "Create"
      operationId: "specialtyPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_90"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Specialty"
  /specialty/{id}:
    get:
      tags:
      - "specialty"
      summary: "Read"
      operationId: "specialtyIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_30"
      x-swagger-router-controller: "Specialty"
    put:
      tags:
      - "specialty"
      summary: "Update"
      operationId: "specialtyIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_91"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Specialty"
    delete:
      tags:
      - "specialty"
      summary: "Delete"
      operationId: "specialtyIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Specialty"
    patch:
      tags:
      - "specialty"
      summary: "Increment"
      operationId: "specialtyIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_92"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Specialty"
  /state:
    get:
      tags:
      - "state"
      summary: "List"
      operationId: "stateGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of state"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_31"
      x-swagger-router-controller: "State"
    post:
      tags:
      - "state"
      summary: "Create"
      operationId: "statePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_93"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "State"
  /state/{id}:
    get:
      tags:
      - "state"
      summary: "Read"
      operationId: "stateIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_31"
      x-swagger-router-controller: "State"
    put:
      tags:
      - "state"
      summary: "Update"
      operationId: "stateIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_94"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "State"
    delete:
      tags:
      - "state"
      summary: "Delete"
      operationId: "stateIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "State"
    patch:
      tags:
      - "state"
      summary: "Increment"
      operationId: "stateIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_95"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "State"
  /surgeriesview:
    get:
      tags:
      - "surgeriesview"
      summary: "List"
      operationId: "surgeriesviewGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of surgeriesview"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_32"
      x-swagger-router-controller: "Surgeriesview"
    post:
      tags:
      - "surgeriesview"
      summary: "Create"
      operationId: "surgeriesviewPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_96"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgeriesview"
  /surgeriesview/{id}:
    get:
      tags:
      - "surgeriesview"
      summary: "Read"
      operationId: "surgeriesviewIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_32"
      x-swagger-router-controller: "Surgeriesview"
    put:
      tags:
      - "surgeriesview"
      summary: "Update"
      operationId: "surgeriesviewIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_97"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgeriesview"
    delete:
      tags:
      - "surgeriesview"
      summary: "Delete"
      operationId: "surgeriesviewIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgeriesview"
    patch:
      tags:
      - "surgeriesview"
      summary: "Increment"
      operationId: "surgeriesviewIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_98"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgeriesview"
  /surgery:
    get:
      tags:
      - "surgery"
      summary: "List"
      operationId: "surgeryGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of surgery"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_33"
      x-swagger-router-controller: "Surgery"
    post:
      tags:
      - "surgery"
      summary: "Create"
      operationId: "surgeryPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_99"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery"
  /surgery/{id}:
    get:
      tags:
      - "surgery"
      summary: "Read"
      operationId: "surgeryIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_33"
      x-swagger-router-controller: "Surgery"
    put:
      tags:
      - "surgery"
      summary: "Update"
      operationId: "surgeryIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_100"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery"
    delete:
      tags:
      - "surgery"
      summary: "Delete"
      operationId: "surgeryIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery"
    patch:
      tags:
      - "surgery"
      summary: "Increment"
      operationId: "surgeryIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_101"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery"
  /surgery_status:
    get:
      tags:
      - "surgery_status"
      summary: "List"
      operationId: "surgery_statusGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of surgery_status"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_34"
      x-swagger-router-controller: "Surgery_status"
    post:
      tags:
      - "surgery_status"
      summary: "Create"
      operationId: "surgery_statusPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_102"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery_status"
  /surgery_status/{id}:
    get:
      tags:
      - "surgery_status"
      summary: "Read"
      operationId: "surgery_statusIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_34"
      x-swagger-router-controller: "Surgery_status"
    put:
      tags:
      - "surgery_status"
      summary: "Update"
      operationId: "surgery_statusIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_103"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery_status"
    delete:
      tags:
      - "surgery_status"
      summary: "Delete"
      operationId: "surgery_statusIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery_status"
    patch:
      tags:
      - "surgery_status"
      summary: "Increment"
      operationId: "surgery_statusIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_104"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Surgery_status"
  /system_variable:
    get:
      tags:
      - "system_variable"
      summary: "List"
      operationId: "system_variableGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of system_variable"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_35"
      x-swagger-router-controller: "System_variable"
    post:
      tags:
      - "system_variable"
      summary: "Create"
      operationId: "system_variablePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_105"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "System_variable"
  /system_variable/{id}:
    get:
      tags:
      - "system_variable"
      summary: "Read"
      operationId: "system_variableIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_35"
      x-swagger-router-controller: "System_variable"
    put:
      tags:
      - "system_variable"
      summary: "Update"
      operationId: "system_variableIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_106"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "System_variable"
    delete:
      tags:
      - "system_variable"
      summary: "Delete"
      operationId: "system_variableIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "System_variable"
    patch:
      tags:
      - "system_variable"
      summary: "Increment"
      operationId: "system_variableIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_107"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "System_variable"
  /systemlog:
    get:
      tags:
      - "systemlog"
      summary: "List"
      operationId: "systemlogGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of systemlog"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Systemlog"
    post:
      tags:
      - "systemlog"
      summary: "Create"
      operationId: "systemlogPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_108"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Systemlog"
  /systemlog/{id}:
    get:
      tags:
      - "systemlog"
      summary: "Read"
      operationId: "systemlogIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200"
      x-swagger-router-controller: "Systemlog"
    put:
      tags:
      - "systemlog"
      summary: "Update"
      operationId: "systemlogIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_109"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Systemlog"
    delete:
      tags:
      - "systemlog"
      summary: "Delete"
      operationId: "systemlogIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Systemlog"
    patch:
      tags:
      - "systemlog"
      summary: "Increment"
      operationId: "systemlogIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_110"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Systemlog"
  /user_user:
    get:
      tags:
      - "user_user"
      summary: "List"
      operationId: "user_userGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of user_user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_36"
      x-swagger-router-controller: "User_user"
    post:
      tags:
      - "user_user"
      summary: "Create"
      operationId: "user_userPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_111"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "User_user"
  /user_user/{id}:
    get:
      tags:
      - "user_user"
      summary: "Read"
      operationId: "user_userIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_36"
      x-swagger-router-controller: "User_user"
    put:
      tags:
      - "user_user"
      summary: "Update"
      operationId: "user_userIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_112"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "User_user"
    delete:
      tags:
      - "user_user"
      summary: "Delete"
      operationId: "user_userIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "User_user"
    patch:
      tags:
      - "user_user"
      summary: "Increment"
      operationId: "user_userIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_113"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "User_user"
  /vendor_data:
    get:
      tags:
      - "vendor_data"
      summary: "List"
      operationId: "vendor_dataGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of vendor_data"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_37"
      x-swagger-router-controller: "Vendor_data"
    post:
      tags:
      - "vendor_data"
      summary: "Create"
      operationId: "vendor_dataPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_114"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendor_data"
  /vendor_data/{id}:
    get:
      tags:
      - "vendor_data"
      summary: "Read"
      operationId: "vendor_dataIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_37"
      x-swagger-router-controller: "Vendor_data"
    put:
      tags:
      - "vendor_data"
      summary: "Update"
      operationId: "vendor_dataIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_115"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendor_data"
    delete:
      tags:
      - "vendor_data"
      summary: "Delete"
      operationId: "vendor_dataIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendor_data"
    patch:
      tags:
      - "vendor_data"
      summary: "Increment"
      operationId: "vendor_dataIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_116"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendor_data"
  /vendordata_user:
    get:
      tags:
      - "vendordata_user"
      summary: "List"
      operationId: "vendordata_userGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of vendordata_user"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_38"
      x-swagger-router-controller: "Vendordata_user"
    post:
      tags:
      - "vendordata_user"
      summary: "Create"
      operationId: "vendordata_userPOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_117"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendordata_user"
  /vendordata_user/{id}:
    get:
      tags:
      - "vendordata_user"
      summary: "Read"
      operationId: "vendordata_userIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_38"
      x-swagger-router-controller: "Vendordata_user"
    put:
      tags:
      - "vendordata_user"
      summary: "Update"
      operationId: "vendordata_userIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_118"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendordata_user"
    delete:
      tags:
      - "vendordata_user"
      summary: "Delete"
      operationId: "vendordata_userIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendordata_user"
    patch:
      tags:
      - "vendordata_user"
      summary: "Increment"
      operationId: "vendordata_userIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_119"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Vendordata_user"
  /years_in_practice:
    get:
      tags:
      - "years_in_practice"
      summary: "List"
      operationId: "years_in_practiceGET"
      parameters:
      - name: "exclude"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "include"
        in: "query"
        description: "One or more related entities (comma separated)."
        required: false
        type: "string"
      - name: "order"
        in: "query"
        description: "Column you want to sort on and the sort direction (comma separated).\
          \ Example: id,desc"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "Page number and page size (comma separated). NB: You cannot\
          \ use \"page\" without \"order\"! Example: 1,10"
        required: false
        type: "string"
      - name: "transform"
        in: "query"
        description: "Transform the records to object format. NB: This can also be\
          \ done client-side in JavaScript!"
        required: false
        type: "boolean"
      - name: "columns"
        in: "query"
        description: "The table columns you want to retrieve (comma separated). Example:\
          \ posts.*,categories.name"
        required: false
        type: "string"
      - name: "filter[]"
        in: "query"
        description: "Filters to be applied. Each filter consists of a column, an\
          \ operator and a value (comma separated). Example: id,eq,1"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "satisfy"
        in: "query"
        description: "Should all filters match (default)? Or any?"
        required: false
        type: "string"
        enum:
        - "any"
      responses:
        200:
          description: "An array of years_in_practice"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/inline_response_200_39"
      x-swagger-router-controller: "Years_in_practice"
    post:
      tags:
      - "years_in_practice"
      summary: "Create"
      operationId: "years_in_practicePOST"
      parameters:
      - in: "body"
        name: "item"
        description: "Item to create."
        required: true
        schema:
          $ref: "#/definitions/item_120"
      responses:
        200:
          description: "Identifier of created item."
          schema:
            type: "integer"
      x-swagger-router-controller: "Years_in_practice"
  /years_in_practice/{id}:
    get:
      tags:
      - "years_in_practice"
      summary: "Read"
      operationId: "years_in_practiceIdGET"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "The requested item."
          schema:
            $ref: "#/definitions/inline_response_200_39"
      x-swagger-router-controller: "Years_in_practice"
    put:
      tags:
      - "years_in_practice"
      summary: "Update"
      operationId: "years_in_practiceIdPUT"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_121"
      responses:
        200:
          description: "Numbsser of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Years_in_practice"
    delete:
      tags:
      - "years_in_practice"
      summary: "Delete"
      operationId: "years_in_practiceIdDELETE"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      responses:
        200:
          description: "Numbersss of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Years_in_practice"
    patch:
      tags:
      - "years_in_practice"
      summary: "Increment"
      operationId: "years_in_practiceIdPATCH"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier for item."
        required: true
        type: "string"
      - in: "body"
        name: "item"
        description: "Properties of item to update."
        required: true
        schema:
          $ref: "#/definitions/item_122"
      responses:
        200:
          description: "Number of affected rows."
          schema:
            type: "integer"
      x-swagger-router-controller: "Years_in_practice"
definitions:
  inline_response_200_33:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgery_status_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "surgery_status"
        - "id"
        x-nullable: true
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      ssn:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_32:
    properties:
      surgeryId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      speciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      preferenceCardName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      hospitalId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      hospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      hospital:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doctorFosId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      doctorDataId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      doctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_35:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      value:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
  inline_response_200_34:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "surgery"
          - "surgery_status_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_31:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "state_id"
        - - "hospital_data"
          - "state_id"
        - - "practice"
          - "state_id"
        - - "vendor_data"
          - "state_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_30:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "specialty_id"
        - - "surgery"
          - "specialty_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_42:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_43:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_40:
    type: "object"
    required:
    - "doctor_id"
    - "hospital_id"
    properties:
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_41:
    type: "object"
    required:
    - "doctor_id"
    - "hospital_id"
    properties:
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_46:
    type: "object"
    required:
    - "doctor_id"
    - "vendor_id"
    properties:
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      vendor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  inline_response_200_37:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "vendor_data_id"
        - - "vendordata_user"
          - "vendordata_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_47:
    type: "object"
    required:
    - "doctor_id"
    - "vendor_id"
    properties:
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      vendor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  inline_response_200_36:
    properties:
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_44:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  inline_response_200_39:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "years_in_practice_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_45:
    type: "object"
    required:
    - "doctor_id"
    - "vendor_id"
    properties:
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      vendor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  inline_response_200_38:
    properties:
      vendordata_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: false
      user_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_48:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
  item_49:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
  inline_response_200_22:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "handedness_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_21:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_24:
    properties:
      id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      DoctorName:
        type: "string"
        maxLength: 23
        x-dbtype: "varchar"
        x-nullable: true
      DoctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_23:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "hospital_data_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_20:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "gown_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_31:
    type: "object"
    required:
    - "created_at"
    - "email"
    - "id"
    - "message"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_32:
    type: "object"
    required:
    - "created_at"
    - "email"
    - "id"
    - "message"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_29:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "resident_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_30:
    type: "object"
    required:
    - "created_at"
    - "email"
    - "id"
    - "message"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_35:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "country_id"
        - - "hospital_data"
          - "country_id"
        - - "practice"
          - "country_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_26:
    properties:
      practice_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_36:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "doctor_data_id"
        x-nullable: false
      image:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      resident_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "resident"
        - "id"
        x-nullable: true
      years_in_practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "years_in_practice"
        - "id"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      handedness_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "handedness"
        - "id"
        x-nullable: true
      inner_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      outer_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      gown_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "gown_size"
        - "id"
        x-nullable: true
      fellow:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      fellowSubspeciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doubleGlove:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      outer_glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      notes:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      fellowshipTrained:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_25:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "practice_id"
        - - "practice_hospital"
          - "practice_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_33:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "country_id"
        - - "hospital_data"
          - "country_id"
        - - "practice"
          - "country_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_28:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "question"
          - "question_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_34:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "country_id"
        - - "hospital_data"
          - "country_id"
        - - "practice"
          - "country_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_27:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "question_id"
        - - "answer_suggested"
          - "question_id"
        - - "exclusioner"
          - "question_id"
        x-nullable: false
      text:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      placeholder:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cluster_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: true
      question_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question_type"
        - "id"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      required:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      options:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      indent:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
  item_39:
    type: "object"
    required:
    - "doctor_id"
    - "hospital_id"
    properties:
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_120:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "years_in_practice_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_37:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "doctor_data_id"
        x-nullable: false
      image:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      resident_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "resident"
        - "id"
        x-nullable: true
      years_in_practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "years_in_practice"
        - "id"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      handedness_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "handedness"
        - "id"
        x-nullable: true
      inner_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      outer_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      gown_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "gown_size"
        - "id"
        x-nullable: true
      fellow:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      fellowSubspeciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doubleGlove:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      outer_glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      notes:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      fellowshipTrained:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_38:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "doctor_data_id"
        x-nullable: false
      image:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      resident_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "resident"
        - "id"
        x-nullable: true
      years_in_practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "years_in_practice"
        - "id"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      handedness_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "handedness"
        - "id"
        x-nullable: true
      inner_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      outer_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      gown_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "gown_size"
        - "id"
        x-nullable: true
      fellow:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      fellowSubspeciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doubleGlove:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      outer_glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      notes:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      fellowshipTrained:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_122:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "years_in_practice_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_121:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "years_in_practice_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_60:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "gown_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_61:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "gown_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_64:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_65:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_62:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "gown_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_63:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_68:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "handedness_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_69:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "hospital_data_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_66:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "handedness_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_67:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "handedness_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_50:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
  item_53:
    type: "object"
    required:
    - "credentials_expired"
    - "email"
    - "email_canonical"
    - "enabled"
    - "expired"
    - "id"
    - "locked"
    - "password"
    - "roles"
    - "salt"
    - "username"
    - "username_canonical"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "fos_user_id"
        - - "answer_suggested"
          - "suggesting_hospital_id"
        - - "answer_suggested"
          - "fos_user_id"
        - - "answers_box"
          - "hospital_id"
        - - "answers_box"
          - "doctor_id"
        - - "answers_box"
          - "respondent_id"
        - - "doctor_hospital"
          - "hospital_id"
        - - "doctor_hospital"
          - "doctor_id"
        - - "doctor_message"
          - "user_id"
        - - "doctor_message"
          - "sender_id"
        - - "doctor_vendor"
          - "doctor_id"
        - - "doctor_vendor"
          - "vendor_id"
        - - "fos_user"
          - "staffOf_id"
        - - "practice_hospital"
          - "hospital_id"
        - - "surgery"
          - "hospital_id"
        - - "surgery"
          - "doctor_id"
        - - "user_user"
          - "user_id"
        - - "vendordata_user"
          - "user_id"
        x-nullable: false
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "doctor_data"
        - "id"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "hospital_data"
        - "id"
        x-nullable: true
      username:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      username_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      enabled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      salt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      password:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      last_login:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      locked:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expires_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      confirmation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      password_requested_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      roles:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      credentials_expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      credentials_expire_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: true
      activation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      vendor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: true
      staffOf_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_54:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "inner_glove_size_id"
        - - "doctor_data"
          - "outer_glove_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_51:
    type: "object"
    required:
    - "credentials_expired"
    - "email"
    - "email_canonical"
    - "enabled"
    - "expired"
    - "id"
    - "locked"
    - "password"
    - "roles"
    - "salt"
    - "username"
    - "username_canonical"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "fos_user_id"
        - - "answer_suggested"
          - "suggesting_hospital_id"
        - - "answer_suggested"
          - "fos_user_id"
        - - "answers_box"
          - "hospital_id"
        - - "answers_box"
          - "doctor_id"
        - - "answers_box"
          - "respondent_id"
        - - "doctor_hospital"
          - "hospital_id"
        - - "doctor_hospital"
          - "doctor_id"
        - - "doctor_message"
          - "user_id"
        - - "doctor_message"
          - "sender_id"
        - - "doctor_vendor"
          - "doctor_id"
        - - "doctor_vendor"
          - "vendor_id"
        - - "fos_user"
          - "staffOf_id"
        - - "practice_hospital"
          - "hospital_id"
        - - "surgery"
          - "hospital_id"
        - - "surgery"
          - "doctor_id"
        - - "user_user"
          - "user_id"
        - - "vendordata_user"
          - "user_id"
        x-nullable: false
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "doctor_data"
        - "id"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "hospital_data"
        - "id"
        x-nullable: true
      username:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      username_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      enabled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      salt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      password:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      last_login:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      locked:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expires_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      confirmation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      password_requested_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      roles:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      credentials_expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      credentials_expire_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: true
      activation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      vendor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: true
      staffOf_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_52:
    type: "object"
    required:
    - "credentials_expired"
    - "email"
    - "email_canonical"
    - "enabled"
    - "expired"
    - "id"
    - "locked"
    - "password"
    - "roles"
    - "salt"
    - "username"
    - "username_canonical"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "fos_user_id"
        - - "answer_suggested"
          - "suggesting_hospital_id"
        - - "answer_suggested"
          - "fos_user_id"
        - - "answers_box"
          - "hospital_id"
        - - "answers_box"
          - "doctor_id"
        - - "answers_box"
          - "respondent_id"
        - - "doctor_hospital"
          - "hospital_id"
        - - "doctor_hospital"
          - "doctor_id"
        - - "doctor_message"
          - "user_id"
        - - "doctor_message"
          - "sender_id"
        - - "doctor_vendor"
          - "doctor_id"
        - - "doctor_vendor"
          - "vendor_id"
        - - "fos_user"
          - "staffOf_id"
        - - "practice_hospital"
          - "hospital_id"
        - - "surgery"
          - "hospital_id"
        - - "surgery"
          - "doctor_id"
        - - "user_user"
          - "user_id"
        - - "vendordata_user"
          - "user_id"
        x-nullable: false
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "doctor_data"
        - "id"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "hospital_data"
        - "id"
        x-nullable: true
      username:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      username_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      enabled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      salt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      password:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      last_login:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      locked:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expires_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      confirmation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      password_requested_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      roles:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      credentials_expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      credentials_expire_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: true
      activation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      vendor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: true
      staffOf_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_57:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "glove_type_id"
        - - "doctor_data"
          - "outer_glove_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_58:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "glove_type_id"
        - - "doctor_data"
          - "outer_glove_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_55:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "inner_glove_size_id"
        - - "doctor_data"
          - "outer_glove_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_56:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "inner_glove_size_id"
        - - "doctor_data"
          - "outer_glove_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_59:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "glove_type_id"
        - - "doctor_data"
          - "outer_glove_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_82:
    type: "object"
    required:
    - "active"
    - "id"
    - "required"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "question_id"
        - - "answer_suggested"
          - "question_id"
        - - "exclusioner"
          - "question_id"
        x-nullable: false
      text:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      placeholder:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cluster_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: true
      question_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question_type"
        - "id"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      required:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      options:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      indent:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
  item_83:
    type: "object"
    required:
    - "active"
    - "id"
    - "required"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "question_id"
        - - "answer_suggested"
          - "question_id"
        - - "exclusioner"
          - "question_id"
        x-nullable: false
      text:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      placeholder:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cluster_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: true
      question_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question_type"
        - "id"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      required:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      options:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      indent:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
  item_80:
    type: "object"
    required:
    - "hospital_id"
    - "practice_id"
    properties:
      practice_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_81:
    type: "object"
    required:
    - "active"
    - "id"
    - "required"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "question_id"
        - - "answer_suggested"
          - "question_id"
        - - "exclusioner"
          - "question_id"
        x-nullable: false
      text:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      placeholder:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cluster_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: true
      question_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question_type"
        - "id"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      required:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      options:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      indent:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
  item_86:
    type: "object"
    required:
    - "id"
    - "name"
    - "position"
    - "slug"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "question"
          - "question_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_87:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "resident_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_84:
    type: "object"
    required:
    - "id"
    - "name"
    - "position"
    - "slug"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "question"
          - "question_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_85:
    type: "object"
    required:
    - "id"
    - "name"
    - "position"
    - "slug"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "question"
          - "question_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      position:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_88:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "resident_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_89:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "resident_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_9:
    properties:
      cluster_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: false
      card_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: false
  inline_response_200_5:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      file:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_71:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "hospital_data_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_6:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answers_box"
          - "card_id"
        - - "cluster_card"
          - "card_id"
        - - "exclusioner"
          - "card_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      category_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
  item_72:
    type: "object"
    required:
    - "created_at"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      DoctorName:
        type: "string"
        maxLength: 23
        x-dbtype: "varchar"
        x-nullable: true
      DoctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_7:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "card"
          - "category_id"
        - - "category"
          - "parent_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      parent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
  inline_response_200_8:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "cluster_card"
          - "cluster_id"
        - - "question"
          - "cluster_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_70:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "hospital_data_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_75:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "practice_id"
        - - "practice_hospital"
          - "practice_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_76:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "practice_id"
        - - "practice_hospital"
          - "practice_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_73:
    type: "object"
    required:
    - "created_at"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      DoctorName:
        type: "string"
        maxLength: 23
        x-dbtype: "varchar"
        x-nullable: true
      DoctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_74:
    type: "object"
    required:
    - "created_at"
    - "message"
    - "subject"
    - "viewed"
    properties:
      id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      DoctorName:
        type: "string"
        maxLength: 23
        x-dbtype: "varchar"
        x-nullable: true
      DoctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      HospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_79:
    type: "object"
    required:
    - "hospital_id"
    - "practice_id"
    properties:
      practice_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_77:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "practice_id"
        - - "practice_hospital"
          - "practice_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_78:
    type: "object"
    required:
    - "hospital_id"
    - "practice_id"
    properties:
      practice_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_9:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "answers_box_id"
        - - "answer_suggested"
          - "answers_box_id"
        - - "answers_box"
          - "parent_snapshot_id"
        - - "attachment"
          - "answer_box_id"
        - - "surgery"
          - "answer_box_id"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      respondent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      parent_snapshot_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_8:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      suggesting_hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_7:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      suggesting_hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_6:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      suggesting_hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_5:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "updated_at"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      updated_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_4:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "updated_at"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      updated_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_1:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      updated_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_3:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "updated_at"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      updated_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_2:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_2:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      fos_user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      suggesting_hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      answers_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      reply:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_1:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_3:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "answers_box_id"
        - - "answer_suggested"
          - "answers_box_id"
        - - "answers_box"
          - "parent_snapshot_id"
        - - "attachment"
          - "answer_box_id"
        - - "surgery"
          - "answer_box_id"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      respondent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      parent_snapshot_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  inline_response_200_4:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      title:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      content:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
  inline_response_200_11:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "country_id"
        - - "hospital_data"
          - "country_id"
        - - "practice"
          - "country_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_10:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  inline_response_200_13:
    properties:
      hospital_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  inline_response_200_12:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "doctor_data_id"
        x-nullable: false
      image:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      resident_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "resident"
        - "id"
        x-nullable: true
      years_in_practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "years_in_practice"
        - "id"
        x-nullable: true
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      country_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "country"
        - "id"
        x-nullable: true
      handedness_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "handedness"
        - "id"
        x-nullable: true
      inner_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      outer_glove_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_size"
        - "id"
        x-nullable: true
      glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      gown_size_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "gown_size"
        - "id"
        x-nullable: true
      fellow:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      fellowSubspeciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doubleGlove:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      outer_glove_type_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "glove_type"
        - "id"
        x-nullable: true
      notes:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      fellowshipTrained:
        type: "integer"
        x-dbtype: "smallint"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_20:
    type: "object"
    required:
    - "active"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answers_box"
          - "card_id"
        - - "cluster_card"
          - "card_id"
        - - "exclusioner"
          - "card_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      category_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
  inline_response_200_19:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "glove_type_id"
        - - "doctor_data"
          - "outer_glove_type_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_21:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "card"
          - "category_id"
        - - "category"
          - "parent_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      parent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
  inline_response_200_18:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "inner_glove_size_id"
        - - "doctor_data"
          - "outer_glove_size_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_24:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "cluster_card"
          - "cluster_id"
        - - "question"
          - "cluster_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_15:
    properties:
      doctor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
      vendor_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_25:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "cluster_card"
          - "cluster_id"
        - - "question"
          - "cluster_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  inline_response_200_14:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      subject:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      message:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      viewed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      sender_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_22:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "card"
          - "category_id"
        - - "category"
          - "parent_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      parent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
  inline_response_200_17:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "fos_user_id"
        - - "answer_suggested"
          - "suggesting_hospital_id"
        - - "answer_suggested"
          - "fos_user_id"
        - - "answers_box"
          - "hospital_id"
        - - "answers_box"
          - "doctor_id"
        - - "answers_box"
          - "respondent_id"
        - - "doctor_hospital"
          - "hospital_id"
        - - "doctor_hospital"
          - "doctor_id"
        - - "doctor_message"
          - "user_id"
        - - "doctor_message"
          - "sender_id"
        - - "doctor_vendor"
          - "doctor_id"
        - - "doctor_vendor"
          - "vendor_id"
        - - "fos_user"
          - "staffOf_id"
        - - "practice_hospital"
          - "hospital_id"
        - - "surgery"
          - "hospital_id"
        - - "surgery"
          - "doctor_id"
        - - "user_user"
          - "user_id"
        - - "vendordata_user"
          - "user_id"
        x-nullable: false
      doctor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "doctor_data"
        - "id"
        x-nullable: true
      hospital_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "hospital_data"
        - "id"
        x-nullable: true
      username:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      username_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      email_canonical:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      enabled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      salt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      password:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      last_login:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      locked:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      expires_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      confirmation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      password_requested_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      roles:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
      credentials_expired:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
      credentials_expire_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      practice_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "practice"
        - "id"
        x-nullable: true
      activation_token:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      vendor_data_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: true
      staffOf_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
  item_23:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "card"
          - "category_id"
        - - "category"
          - "parent_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      parent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
  inline_response_200_16:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      question_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "question"
        - "id"
        x-nullable: true
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
  item_28:
    type: "object"
    required:
    - "card_id"
    - "cluster_id"
    properties:
      cluster_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: false
      card_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: false
  item_29:
    type: "object"
    required:
    - "card_id"
    - "cluster_id"
    properties:
      cluster_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: false
      card_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: false
  item_26:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "cluster_card"
          - "cluster_id"
        - - "question"
          - "cluster_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_27:
    type: "object"
    required:
    - "card_id"
    - "cluster_id"
    properties:
      cluster_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "cluster"
        - "id"
        x-nullable: false
      card_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: false
  item_113:
    type: "object"
    required:
    - "user_id"
    properties:
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_112:
    type: "object"
    required:
    - "user_id"
    properties:
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_111:
    type: "object"
    required:
    - "user_id"
    properties:
      user_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_110:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_117:
    type: "object"
    required:
    - "user_id"
    - "vendordata_id"
    properties:
      vendordata_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: false
      user_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  inline_response_200:
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_116:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "vendor_data_id"
        - - "vendordata_user"
          - "vendordata_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_115:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "vendor_data_id"
        - - "vendordata_user"
          - "vendordata_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_114:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "fos_user"
          - "vendor_data_id"
        - - "vendordata_user"
          - "vendordata_id"
        x-nullable: false
      state_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "state"
        - "id"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      address:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      suite:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      city:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      stateTyped:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      postalCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      phone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      userRole:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_119:
    type: "object"
    required:
    - "user_id"
    - "vendordata_id"
    properties:
      vendordata_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: false
      user_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_118:
    type: "object"
    required:
    - "user_id"
    - "vendordata_id"
    properties:
      vendordata_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "vendor_data"
        - "id"
        x-nullable: false
      user_id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: false
  item_90:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "specialty_id"
        - - "surgery"
          - "specialty_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_93:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "state_id"
        - - "hospital_data"
          - "state_id"
        - - "practice"
          - "state_id"
        - - "vendor_data"
          - "state_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_94:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "state_id"
        - - "hospital_data"
          - "state_id"
        - - "practice"
          - "state_id"
        - - "vendor_data"
          - "state_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_91:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "specialty_id"
        - - "surgery"
          - "specialty_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_92:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "specialty_id"
        - - "surgery"
          - "specialty_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_97:
    type: "object"
    required:
    - "created_at"
    - "doctorEmail"
    - "hospitalEmail"
    - "patient"
    - "speciality"
    properties:
      surgeryId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      speciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      preferenceCardName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      hospitalId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      hospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      hospital:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doctorFosId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      doctorDataId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      doctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_10:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "answers_box_id"
        - - "answer_suggested"
          - "answers_box_id"
        - - "answers_box"
          - "parent_snapshot_id"
        - - "attachment"
          - "answer_box_id"
        - - "surgery"
          - "answer_box_id"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      respondent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      parent_snapshot_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_98:
    type: "object"
    required:
    - "created_at"
    - "doctorEmail"
    - "hospitalEmail"
    - "patient"
    - "speciality"
    properties:
      surgeryId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      speciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      preferenceCardName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      hospitalId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      hospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      hospital:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doctorFosId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      doctorDataId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      doctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_95:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "doctor_data"
          - "state_id"
        - - "hospital_data"
          - "state_id"
        - - "practice"
          - "state_id"
        - - "vendor_data"
          - "state_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_96:
    type: "object"
    required:
    - "created_at"
    - "doctorEmail"
    - "hospitalEmail"
    - "patient"
    - "speciality"
    properties:
      surgeryId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      speciality:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      preferenceCardName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      hospitalId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      hospitalEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      hospital:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      doctorFosId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: true
      doctorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      doctorDataId:
        type: "integer"
        x-dbtype: "int"
        x-nullable: false
      doctorImage:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      firstName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      lastName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      coordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      officePhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      pager:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      companyName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      billingCoordinatorEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerName:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerPhone:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      managerEmail:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_13:
    type: "object"
    required:
    - "content"
    - "id"
    - "slug"
    - "title"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      title:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      content:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
  item_14:
    type: "object"
    required:
    - "content"
    - "id"
    - "slug"
    - "title"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      title:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      content:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
  item_11:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answer"
          - "answers_box_id"
        - - "answer_suggested"
          - "answers_box_id"
        - - "answers_box"
          - "parent_snapshot_id"
        - - "attachment"
          - "answer_box_id"
        - - "surgery"
          - "answer_box_id"
        x-nullable: false
      card_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "card"
        - "id"
        x-nullable: true
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      respondent_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      parent_snapshot_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgerySnapshot:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_99:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "patient"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgery_status_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "surgery_status"
        - "id"
        x-nullable: true
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      ssn:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_12:
    type: "object"
    required:
    - "content"
    - "id"
    - "slug"
    - "title"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      title:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      content:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: false
  item_17:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      file:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_18:
    type: "object"
    required:
    - "active"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answers_box"
          - "card_id"
        - - "cluster_card"
          - "card_id"
        - - "exclusioner"
          - "card_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      category_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
  item_15:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      file:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_16:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      file:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_102:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "surgery"
          - "surgery_status_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_101:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "patient"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgery_status_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "surgery_status"
        - "id"
        x-nullable: true
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      ssn:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_19:
    type: "object"
    required:
    - "active"
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "answers_box"
          - "card_id"
        - - "cluster_card"
          - "card_id"
        - - "exclusioner"
          - "card_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      category_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "category"
        - "id"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      active:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: false
  item_100:
    type: "object"
    required:
    - "created_at"
    - "id"
    - "patient"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      doctor_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      specialty_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "specialty"
        - "id"
        x-nullable: true
      answer_box_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "answers_box"
        - "id"
        x-nullable: true
      surgery_status_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "surgery_status"
        - "id"
        x-nullable: true
      patient:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
      ssn:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      term:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
      reschedules:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      cancelled:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      cpt:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      completed:
        type: "integer"
        x-dbtype: "tinyint"
        x-nullable: true
      initials:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      diagnosisCode:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      hospital_id:
        type: "integer"
        x-dbtype: "int"
        x-references:
        - "fos_user"
        - "id"
        x-nullable: true
      surgeryTime:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      admissionStatus:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
  item_106:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      value:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
  item_105:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      value:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
  item_104:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "surgery"
          - "surgery_status_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_103:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-referenced:
        - - "surgery"
          - "surgery_status_id"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: false
  item_109:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_108:
    type: "object"
    required:
    - "created_at"
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      type:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      description:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
      created_at:
        type: "string"
        x-dbtype: "datetime"
        x-nullable: false
  item_107:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        x-primary-key: true
        x-dbtype: "int"
        x-nullable: false
      name:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      slug:
        type: "string"
        maxLength: 255
        x-dbtype: "varchar"
        x-nullable: true
      value:
        type: "string"
        maxLength: -1
        x-dbtype: "longtext"
        x-nullable: true
x-azure-api-id: "sh-1497964779974"
